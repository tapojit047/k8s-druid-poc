apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: druid
    component: coordinator
    druid_cr: tiny-cluster
    environment: stage
    nodeSpecUniqueStr: druid-tiny-cluster-coordinators
    release: alpha
  name: druid-tiny-cluster-coordinators
  namespace: druid
spec:
  replicas: 1
  selector:
    matchLabels:
      app: druid
      component: coordinator
      druid_cr: tiny-cluster
      environment: stage
      nodeSpecUniqueStr: druid-tiny-cluster-coordinators
      release: alpha
  serviceName: druid-tiny-cluster-coordinators
  template:
    metadata:
      labels:
        app: druid
        component: coordinator
        druid_cr: tiny-cluster
        environment: stage
        nodeSpecUniqueStr: druid-tiny-cluster-coordinators
        release: alpha
    spec:
      containers:
        - command:
            - /druid.sh
            - coordinator
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: apache/druid:25.0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /status/health
              port: 8088
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: druid-tiny-cluster-coordinators
          ports:
            - containerPort: 8088
              name: druid-port
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /status/health
              port: 8088
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/druid/conf/druid/cluster/_common
              name: common-config-volume
              readOnly: true
            - mountPath: /opt/druid/conf/druid/cluster/master/coordinator-overlord
              name: nodetype-config-volume
              readOnly: true
            - mountPath: /opt/druid/extensions/mysql-connector
              name: mysqlconnector
      initContainers:
        - command:
            - sh
            - -c
            - wget -O /tmp/mysql-connector-j-8.0.32.tar.gz https://downloads.mysql.com/archives/get/p/3/file/mysql-connector-j-8.0.32.tar.gz
              && cd /tmp && tar -xf /tmp/mysql-connector-j-8.0.32.tar.gz && cp /tmp/mysql-connector-j-8.0.32/mysql-connector-j-8.0.32.jar
              /opt/druid/extensions/mysql-connector/mysql-connector-java.jar
          image: apache/druid:25.0.0
          imagePullPolicy: IfNotPresent
          name: mysqlconnector
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/druid/extensions/mysql-connector
              name: mysqlconnector
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
        - name: common-config-volume
          configMap:
            name: tiny-cluster-druid-common-config
        - name: nodetype-config-volume
          configMap:
            name: druid-tiny-cluster-coordinators-config
        - name: mysqlconnector
          emptyDir: {}
  updateStrategy:
    type: RollingUpdate
