apiVersion: v1
data:
  jvm.config: |-
    -server
    -Duser.timezone=UTC
    -Dfile.encoding=UTF-8
#  log4j2.xml: |-
#    <?xml version="1.0" encoding="UTF-8" ?>
#    <Configuration status="TRACE">
#        <Appenders>
#            <Http name="Http" url="https://demo.parseable.io/api/v1/ingest" method="POST">
#              <Property name="Authorization" value="Basic YWRtaW46YWRtaW4=" />
#              <Property name="X-P-Stream" value="druide2e" />
#              <Property name="Accept" value="application/json" />
#              <Property name="X-Java-Runtime" value="$${java:runtime}" />
#              <JsonLayout properties="true"/>
#            </Http>
#        </Appenders>
#        <Loggers>
#            <Root level="info">
#                <AppenderRef ref="Http"/>
#            </Root>
#        </Loggers>
#    </Configuration>
  runtime.properties: |
    druid.port=8088
    druid.service=druid/middleManager
    #druid.worker.capacity=1
    #druid.indexer.runner.javaOpts=-server -Xms128m -Xmx128m -XX:MaxDirectMemorySize=256m -Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.io.tmpdir=/druid/data/tmp -XX:+ExitOnOutOfMemoryError -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager
    druid.indexer.task.baseTaskDir=/druid/data/baseTaskDir
    #druid.server.http.numThreads=1
    #druid.indexer.fork.property.druid.processing.buffer.sizeBytes=25000000
    #druid.indexer.fork.property.druid.processing.numMergeBuffers=2
    #druid.indexer.fork.property.druid.processing.numThreads=1
kind: ConfigMap
metadata:
  labels:
    app: druid
    component: middleManager
    druid_cr: tiny-cluster
    environment: stage
    nodeSpecUniqueStr: druid-tiny-cluster-middlemanagers
    release: alpha
  name: druid-tiny-cluster-middlemanagers-config
  namespace: druid
