apiVersion: v1
kind: Service
metadata:
  name: zookeeper-admin-server
spec:
  ports:
    - name: tcp-admin-server
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: zookeeper
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper-client
spec:
  ports:
    - name: tcp-client
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    app: zookeeper
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  clusterIP: None
  ports:
    - name: tcp-client
      port: 2181
      protocol: TCP
      targetPort: 2181
    - name: tcp-quorum
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: tcp-leader-election
      port: 3888
      protocol: TCP
      targetPort: 3888
    - name: tcp-metrics
      port: 7000
      protocol: TCP
      targetPort: 7000
    - name: tcp-admin-server
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: zookeeper
  type: ClusterIP

---

apiVersion: v1
stringData:
  env.sh: |
    #!/usr/bin/env bash

    DOMAIN=zookeeper.default.svc.cluster.local
    QUORUM_PORT=2888
    LEADER_PORT=3888
    CLIENT_HOST=zookeeper-client
    CLIENT_PORT=2181
    ADMIN_SERVER_HOST=zookeeper-admin-server
    ADMIN_SERVER_PORT=8080
    CLUSTER_NAME=zookeeper
    CLUSTER_SIZE=2
  # log4j-quiet.properties: |
  #   log4j.rootLogger=ERROR, CONSOLE
  #   log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
  #   log4j.appender.CONSOLE.Threshold=ERROR
  #   log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
  #   log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n
  # log4j.properties: |
  #   zookeeper.root.logger=CONSOLE
  #   zookeeper.console.threshold=INFO
  #   log4j.rootLogger=${zookeeper.root.logger}
  #   log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
  #   log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
  #   log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n
  zoo.cfg: |
    4lw.commands.whitelist=cons, envi, conf, crst, srvr, stat, mntr, ruok
    dataDir=/data
    standaloneEnabled=false
    reconfigEnabled=true
    skipACL=yes
    metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider
    metricsProvider.httpPort=7000
    metricsProvider.exportJvmInfo=true
    initLimit=10
    syncLimit=2
    tickTime=2000
    globalOutstandingLimit=1000
    preAllocSize=65536
    snapCount=10000
    commitLogCount=500
    snapSizeLimitInKb=4194304
    maxCnxns=0
    maxClientCnxns=60
    minSessionTimeout=4000
    maxSessionTimeout=40000
    autopurge.snapRetainCount=3
    autopurge.purgeInterval=1
    quorumListenOnAllIPs=false
    admin.serverPort=8080
    dynamicConfigFile=/data/zoo.cfg.dynamic
kind: Secret
metadata:
  name: zoo-config

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  # persistentVolumeClaimRetentionPolicy:
  #   whenDeleted: Retain
  #   whenScaled: Retain
  # podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper
  template:
    metadata:
      generateName: zookeeper
      labels:
        app: zookeeper
    spec:
      containers:
        - env:
            - name: ENVOY_SIDECAR_STATUS
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['sidecar.istio.io/status']
          # - name: ZK_SERVER
          #   value: zookeeper-0.zookeeper.default.svc.cluster.local:2888:3888,zookeeper-1.zookeeper.default.svc.cluster.local:2888:3888
          image: pravega/zookeeper:0.2.14
          #image: zookeeper:latest
          command:
            - /usr/local/bin/zookeeperStart.sh
          name: zookeeper
          ports:
            - containerPort: 2181
              name: client
              protocol: TCP
            - containerPort: 2888
              name: quorum
              protocol: TCP
            - containerPort: 3888
              name: leader-election
              protocol: TCP
            - containerPort: 7000
              name: metrics
              protocol: TCP
            - containerPort: 8080
              name: admin-server
              protocol: TCP
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 65m
              memory: 156Mi
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /conf
              name: conf
      volumes:
        - secret:
            defaultMode: 444
            secretName: zoo-config
          name: conf
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard